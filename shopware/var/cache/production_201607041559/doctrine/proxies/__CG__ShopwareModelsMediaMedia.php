<?php

namespace Shopware\Proxies\__CG__\Shopware\Models\Media;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Media extends \Shopware\Models\Media\Media implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Shopware\\Models\\Media\\Media' . "\0" . 'defaultThumbnails', '' . "\0" . 'Shopware\\Models\\Media\\Media' . "\0" . 'typeMapping', '' . "\0" . 'Shopware\\Models\\Media\\Media' . "\0" . 'id', '' . "\0" . 'Shopware\\Models\\Media\\Media' . "\0" . 'albumId', '' . "\0" . 'Shopware\\Models\\Media\\Media' . "\0" . 'name', '' . "\0" . 'Shopware\\Models\\Media\\Media' . "\0" . 'description', '' . "\0" . 'Shopware\\Models\\Media\\Media' . "\0" . 'path', '' . "\0" . 'Shopware\\Models\\Media\\Media' . "\0" . 'type', '' . "\0" . 'Shopware\\Models\\Media\\Media' . "\0" . 'extension', '' . "\0" . 'Shopware\\Models\\Media\\Media' . "\0" . 'userId', '' . "\0" . 'Shopware\\Models\\Media\\Media' . "\0" . 'created', '' . "\0" . 'Shopware\\Models\\Media\\Media' . "\0" . 'file', '' . "\0" . 'Shopware\\Models\\Media\\Media' . "\0" . 'fileSize', '' . "\0" . 'Shopware\\Models\\Media\\Media' . "\0" . 'width', '' . "\0" . 'Shopware\\Models\\Media\\Media' . "\0" . 'height', '' . "\0" . 'Shopware\\Models\\Media\\Media' . "\0" . 'album', '' . "\0" . 'Shopware\\Models\\Media\\Media' . "\0" . 'thumbnails', '' . "\0" . 'Shopware\\Models\\Media\\Media' . "\0" . 'highDpiThumbnails', 'attribute', 'articles', 'blogMedia', 'properties'];
        }

        return ['__isInitialized__', '' . "\0" . 'Shopware\\Models\\Media\\Media' . "\0" . 'defaultThumbnails', '' . "\0" . 'Shopware\\Models\\Media\\Media' . "\0" . 'typeMapping', '' . "\0" . 'Shopware\\Models\\Media\\Media' . "\0" . 'id', '' . "\0" . 'Shopware\\Models\\Media\\Media' . "\0" . 'albumId', '' . "\0" . 'Shopware\\Models\\Media\\Media' . "\0" . 'name', '' . "\0" . 'Shopware\\Models\\Media\\Media' . "\0" . 'description', '' . "\0" . 'Shopware\\Models\\Media\\Media' . "\0" . 'path', '' . "\0" . 'Shopware\\Models\\Media\\Media' . "\0" . 'type', '' . "\0" . 'Shopware\\Models\\Media\\Media' . "\0" . 'extension', '' . "\0" . 'Shopware\\Models\\Media\\Media' . "\0" . 'userId', '' . "\0" . 'Shopware\\Models\\Media\\Media' . "\0" . 'created', '' . "\0" . 'Shopware\\Models\\Media\\Media' . "\0" . 'file', '' . "\0" . 'Shopware\\Models\\Media\\Media' . "\0" . 'fileSize', '' . "\0" . 'Shopware\\Models\\Media\\Media' . "\0" . 'width', '' . "\0" . 'Shopware\\Models\\Media\\Media' . "\0" . 'height', '' . "\0" . 'Shopware\\Models\\Media\\Media' . "\0" . 'album', '' . "\0" . 'Shopware\\Models\\Media\\Media' . "\0" . 'thumbnails', '' . "\0" . 'Shopware\\Models\\Media\\Media' . "\0" . 'highDpiThumbnails', 'attribute', 'articles', 'blogMedia', 'properties'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Media $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setAlbumId($albumId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAlbumId', [$albumId]);

        return parent::setAlbumId($albumId);
    }

    /**
     * {@inheritDoc}
     */
    public function getAlbumId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAlbumId', []);

        return parent::getAlbumId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setPath($path)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPath', [$path]);

        return parent::setPath($path);
    }

    /**
     * {@inheritDoc}
     */
    public function getPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPath', []);

        return parent::getPath();
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setExtension($extension)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExtension', [$extension]);

        return parent::setExtension($extension);
    }

    /**
     * {@inheritDoc}
     */
    public function getExtension()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExtension', []);

        return parent::getExtension();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserId($userId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserId', [$userId]);

        return parent::setUserId($userId);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserId', []);

        return parent::getUserId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreated($created)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreated', [$created]);

        return parent::setCreated($created);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated', []);

        return parent::getCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setFileSize($fileSize)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFileSize', [$fileSize]);

        return parent::setFileSize($fileSize);
    }

    /**
     * {@inheritDoc}
     */
    public function getFileSize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFileSize', []);

        return parent::getFileSize();
    }

    /**
     * {@inheritDoc}
     */
    public function getFormattedFileSize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFormattedFileSize', []);

        return parent::getFormattedFileSize();
    }

    /**
     * {@inheritDoc}
     */
    public function getAlbum()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAlbum', []);

        return parent::getAlbum();
    }

    /**
     * {@inheritDoc}
     */
    public function setAlbum(\Shopware\Models\Media\Album $album)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAlbum', [$album]);

        return parent::setAlbum($album);
    }

    /**
     * {@inheritDoc}
     */
    public function getFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFile', []);

        return parent::getFile();
    }

    /**
     * {@inheritDoc}
     */
    public function setFile(\Symfony\Component\HttpFoundation\File\File $file)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFile', [$file]);

        return parent::setFile($file);
    }

    /**
     * {@inheritDoc}
     */
    public function getThumbnails()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getThumbnails', []);

        return parent::getThumbnails();
    }

    /**
     * {@inheritDoc}
     */
    public function getHighDpiThumbnails()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHighDpiThumbnails', []);

        return parent::getHighDpiThumbnails();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedThumbnails()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedThumbnails', []);

        return parent::getCreatedThumbnails();
    }

    /**
     * {@inheritDoc}
     */
    public function onSave()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'onSave', []);

        return parent::onSave();
    }

    /**
     * {@inheritDoc}
     */
    public function onUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'onUpdate', []);

        return parent::onUpdate();
    }

    /**
     * {@inheritDoc}
     */
    public function onLoad()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'onLoad', []);

        return parent::onLoad();
    }

    /**
     * {@inheritDoc}
     */
    public function onRemove()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'onRemove', []);

        return parent::onRemove();
    }

    /**
     * {@inheritDoc}
     */
    public function createAlbumThumbnails(\Shopware\Models\Media\Album $album)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'createAlbumThumbnails', [$album]);

        return parent::createAlbumThumbnails($album);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAlbumThumbnails($thumbnailSizes, $fileName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAlbumThumbnails', [$thumbnailSizes, $fileName]);

        return parent::removeAlbumThumbnails($thumbnailSizes, $fileName);
    }

    /**
     * {@inheritDoc}
     */
    public function getFileName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFileName', []);

        return parent::getFileName();
    }

    /**
     * {@inheritDoc}
     */
    public function loadThumbnails($highDpi = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'loadThumbnails', [$highDpi]);

        return parent::loadThumbnails($highDpi);
    }

    /**
     * {@inheritDoc}
     */
    public function getThumbnailFilePaths($highDpi = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getThumbnailFilePaths', [$highDpi]);

        return parent::getThumbnailFilePaths($highDpi);
    }

    /**
     * {@inheritDoc}
     */
    public function getProperties()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProperties', []);

        return parent::getProperties();
    }

    /**
     * {@inheritDoc}
     */
    public function setProperties($properties)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProperties', [$properties]);

        return parent::setProperties($properties);
    }

    /**
     * {@inheritDoc}
     */
    public function getWidth()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWidth', []);

        return parent::getWidth();
    }

    /**
     * {@inheritDoc}
     */
    public function setWidth($width)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWidth', [$width]);

        return parent::setWidth($width);
    }

    /**
     * {@inheritDoc}
     */
    public function getHeight()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHeight', []);

        return parent::getHeight();
    }

    /**
     * {@inheritDoc}
     */
    public function setHeight($height)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHeight', [$height]);

        return parent::setHeight($height);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultThumbnails()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultThumbnails', []);

        return parent::getDefaultThumbnails();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultThumbnails($defaultThumbnails)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultThumbnails', [$defaultThumbnails]);

        return parent::setDefaultThumbnails($defaultThumbnails);
    }

    /**
     * {@inheritDoc}
     */
    public function getAttribute()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttribute', []);

        return parent::getAttribute();
    }

    /**
     * {@inheritDoc}
     */
    public function setAttribute($attribute)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAttribute', [$attribute]);

        return parent::setAttribute($attribute);
    }

    /**
     * {@inheritDoc}
     */
    public function getArticles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArticles', []);

        return parent::getArticles();
    }

    /**
     * {@inheritDoc}
     */
    public function setArticles($articles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArticles', [$articles]);

        return parent::setArticles($articles);
    }

    /**
     * {@inheritDoc}
     */
    public function fromArray(array $array = array (
), array $fillable = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'fromArray', [$array, $fillable]);

        return parent::fromArray($array, $fillable);
    }

    /**
     * {@inheritDoc}
     */
    public function setOneToOne($data, $model, $property, $reference = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOneToOne', [$data, $model, $property, $reference]);

        return parent::setOneToOne($data, $model, $property, $reference);
    }

    /**
     * {@inheritDoc}
     */
    public function setOneToMany($data, $model, $property, $reference = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOneToMany', [$data, $model, $property, $reference]);

        return parent::setOneToMany($data, $model, $property, $reference);
    }

    /**
     * {@inheritDoc}
     */
    public function setManyToOne($data, $model, $property)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setManyToOne', [$data, $model, $property]);

        return parent::setManyToOne($data, $model, $property);
    }

}
